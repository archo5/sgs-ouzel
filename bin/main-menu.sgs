
class MainMenu : Scene
{
	function __construct()
	{
		this.scene = ouzel.createScene();
		ouzel.sceneManager.scene = this.scene;
		
		this.layer = ouzel.createLayer();
		this.scene.addLayer( this.layer );
		
		this.camera = ouzel.createCamera();
		this.camera.scaleMode = ouzel.CameraScaleMode.SHOW_ALL;
		this.camera.targetContentSize = vec2(400, 600);
		this.layer.addChild( this.camera );
		
		this.menu = ouzel.createMenu();
		this.layer.addChild( this.menu );
		
		this.gitHubButton = ouzel.createButton( "button.png", "button_selected.png", "button_down.png", "", "GitHub\n[sgs-ouzel]", "arial.fnt", 0, ouzel.Color(20, 0, 0, 255), ouzel.Color.BLACK, ouzel.Color.BLACK );
		this.gitHubButton2 = ouzel.createButton( "button.png", "button_selected.png", "button_down.png", "", "GitHub\n[Ouzel]", "arial.fnt", 0, ouzel.Color(20, 0, 0, 255), ouzel.Color.BLACK, ouzel.Color.BLACK );
		this.spritesButton = ouzel.createButton( "button.png", "button_selected.png", "button_down.png", "", "Sprites", "arial.fnt", 0, ouzel.Color(20, 0, 0, 255), ouzel.Color.BLACK, ouzel.Color.BLACK );
		this.guiButton = ouzel.createButton( "button.png", "button_selected.png", "button_down.png", "", "GUI", "arial.fnt", 0, ouzel.Color(20, 0, 0, 255), ouzel.Color.BLACK, ouzel.Color.BLACK );
		this.renderTargetButton = ouzel.createButton( "button.png", "button_selected.png", "button_down.png", "", "Render target", "arial.fnt", 0, ouzel.Color(20, 0, 0, 255), ouzel.Color.BLACK, ouzel.Color.BLACK );
		this.animationsButton = ouzel.createButton( "button.png", "button_selected.png", "button_down.png", "", "Animations", "arial.fnt", 0, ouzel.Color(20, 0, 0, 255), ouzel.Color.BLACK, ouzel.Color.BLACK );
		this.inputButton = ouzel.createButton( "button.png", "button_selected.png", "button_down.png", "", "Input", "arial.fnt", 0, ouzel.Color(20, 0, 0, 255), ouzel.Color.BLACK, ouzel.Color.BLACK );
		this.soundButton = ouzel.createButton( "button.png", "button_selected.png", "button_down.png", "", "Sound", "arial.fnt", 0, ouzel.Color(20, 0, 0, 255), ouzel.Color.BLACK, ouzel.Color.BLACK );
		this.perspectiveButton = ouzel.createButton( "button.png", "button_selected.png", "button_down.png", "", "Perspective", "arial.fnt", 0, ouzel.Color(20, 0, 0, 255), ouzel.Color.BLACK, ouzel.Color.BLACK );
		
		this.gitHubButton.position = vec2(-50, 120);
		this.menu.addWidget( this.gitHubButton );
		
		this.gitHubButton2.position = vec2(50, 120);
		this.menu.addWidget( this.gitHubButton2 );
		
		this.spritesButton.position = vec2(0, 80);
		this.menu.addWidget( this.spritesButton );
		
		this.guiButton.position = vec2(0, 40);
		this.menu.addWidget( this.guiButton );
		
		this.renderTargetButton.position = vec2(0, 0);
		this.menu.addWidget( this.renderTargetButton );
		
		this.animationsButton.position = vec2(0, -40);
		this.menu.addWidget( this.animationsButton );
		
		this.inputButton.position = vec2(0, -80);
		this.menu.addWidget( this.inputButton );
		
		this.soundButton.position = vec2(0, -120);
		this.menu.addWidget( this.soundButton );
		
		this.perspectiveButton.position = vec2(0, -160);
		this.menu.addWidget( this.perspectiveButton );
	}
	function onKeyboardEvent( type, e )
	{
		if( e.key == ouzel.input.KeyboardKey.ESCAPE )
		{
			if( type == ouzel.EventType.KEY_PRESS )
			{
				ouzel.exit();
			}
			return false;
		}
		return true;
	}
	function onUIEvent( type, e )
	{
		if( type == ouzel.EventType.ACTOR_CLICK )
		{
			if( e.actor === this.gitHubButton )
			{
				ouzel.openURL( "https://github.com/snake5/sgs-ouzel" );
			}
			else if( e.actor === this.gitHubButton2 )
			{
				ouzel.openURL( "https://github.com/elnormous/ouzel" );
			}
			else if( e.actor === this.spritesButton )
			{
				_G.curScene = new SpritesSample();
			}
			else if( e.actor === this.guiButton )
			{
				_G.curScene = new GUISample();
			}
			else if( e.actor === this.renderTargetButton )
			{
				_G.curScene = new RTSample();
			}
			else if( e.actor === this.animationsButton )
			{
				_G.curScene = new AnimationsSample();
			}
			else if( e.actor === this.inputButton )
			{
				_G.curScene = new InputSample();
			}
			else if( e.actor === this.soundButton )
			{
				_G.curScene = new SoundSample();
			}
		}
		return true;
	}
}
